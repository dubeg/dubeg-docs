# ServerSetup
Using DO's nameservers or the registrar's?
No clear advantage, only provided as convenience.

Currently, PUTTY/SSH connects directly as root on server.
Should I be connecting as something else?

-------------------------
 Create maintenance user
-------------------------
root$ adduser ghoster       // usr ghost
root$ adduser dubeg         // usr maintenance
root$ gpasswd -a dubeg sudo // add to sudo group
root$ su - dubeg            // hyphn: switch to usrdir, set env 
dubeg$ touch ~/.sudo_as_admin_successful // disable hint
dubeg$ mkdir ~/.ssh
dubeg$ nano ~/.ssh/authorized_keys
- paste public key
- press Ctrl+X, Y

-------------------------
 Disable SSH login as root
-------------------------
root$ nano /etc/ssh/sshd_config
- set PermitRootLogin no
- press Ctrl+X, Y
root$ service ssh restart
- test if ssh login still works before exiting.

-------------------------
 Install Node.js & npm
-------------------------
sudo apt install curl
curl -sL https://deb.nodesource.com/setup_4.x -o nodesource_setup.sh
sudo bash nodesource_setup.sh

-------------------------
 Install Ghost
-------------------------
sudo mkdir -p /var/www/
cd /var/www/
sudo wget https://github.com/TryGhost/Ghost/archive/0.11.4.tar.gz
sudo tar xfz 0.11.4.tar.gz
cd Ghost-0.11.4
sudo npm install --production
- droplet may run out of memory because of npm eating it like crazy.
- to fix this, add swap file with size equal to RAM.
sudo cp config.example.js config.js
sudo nano config.js
- set URL to http://www.dubeg.ca
- set mail settings to mailgun
- set server IP to 0.0.0.0
sudo npm start --production
- test if it works http://dubeg.ca:2368
- can exit after

-------------------------
  Install nginx
-------------------------
sudo apt-get update
sudo apt-get install nginx

cd /etc/nginx/
sudo rm sites-enabled/default
sudo touch sites-available/ghost
sudo nano sites-available/ghost
- paste:
server {
    listen 80;
    server_name your_domain.tld;
    location / {
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   Host      $http_host;
        proxy_pass         http://127.0.0.1:2368;
    }
}
sudo ln -s /etc/nginx/sites-available/ghost /etc/nginx/sites-enabled/ghost
sudo service nginx restart

-------------------------
 Create user for Ghost
-------------------------
sudo adduser --shell /bin/bash --gecos 'Ghost App' ghoster
sudo chown =R ghoster:ghoster /var/www/ghost/
su - ghoster
cd /var/www/ghost/
npm start --production
- test if it works http://www.dubeg.ca:2368
- then, can exit

-------------------------
 Setup forever (run Ghost after it crashes)
-------------------------
sudo npm install -g forever
su - ghoster
cd /var/www/ghost
forever start index.js
- runs Ghost in dev
NODE_ENV=production forever start index.js
- runs Ghost in prod
forever stop index.js 
- must be run from the Ghost directory
- stop Ghost

-------------------------
 Setup SSL using LetsEncrypt & certbot
-------------------------
sudo apt-get install letsencrypt
- edit: /etc/nginx/sites-available/ghost
- add to server block:
location ~ ^/.well-known {
   root /var/www/ghost;
}
sudo nginx -t    # check config errors
letsencrypt certonly --webroot -w /var/www/ghost/ -d dubeg.ca -d www.dubeg.ca
- this will obtain a single cert for dubeg.ca, www.dubeg.ca.
- it will place files below /var/www/ghost/ to prove control
- of these domains.
- edit: /etc/nginx/sites-available/ghost
   + setup server entries for SSL (ex: nginx-ghost.txt)
sudo service nginx restart

-------------------------
 Setup renewal
-------------------------
sudo letsencrypt renew --dry-run --agree-tos
sudo crontab -e
..
30 2 * * 1 /usr/bin/letsencrypt renew >> /var/log/le-renew.log && /bin/systemctl reload nginx
..

-------------------------
 Reboot system
-------------------------
// nginx is auto launched at startup
// only need to launch ghost via forever

sudo reboot
su - ghoster
cd /var/www/ghost/
NODE_ENV=production forever start index.js

// Forever commands
forever start ..
forever stop ..
forever list
ps -ef

## Automatic security upgrades (? review info below ?)
https://help.ubuntu.com/16.04/serverguide/automatic-updates.html

sudo apt-get install unattended-upgrades
sudo nano /etc/apt/apt.conf.d/50unattended-upgrades

Unattended-Upgrade::Allowed-Origins {
        "Ubuntu xenial-security";
//      "Ubuntu xenial-updates";
};

sudo nano /etc/apt/apt.conf.d/10periodic

APT::Periodic::Update-Package-Lists "1";
APT::Periodic::Download-Upgradeable-Packages "1";
APT::Periodic::AutocleanInterval "7";
APT::Periodic::Unattended-Upgrade "1";

Notification
-------------
sudo apt install apticron
sudo nano /etc/apticron/apticron.conf

EMAIL="root@example.com"